{"version":3,"sources":["Context/AppContext.jsx","components/sidebar/Library.jsx","components/sidebar/Logo.jsx","components/sidebar/SortByNav.jsx","containers/SideBar.jsx","components/main/Search.jsx","components/main/MovieCard.jsx","components/main/Carusel.jsx","components/main/SectionTitle.jsx","components/main/Content.jsx","components/main/YoutubeVideoPlayer.jsx","components/main/CardDetail.jsx","components/main/SearchResult.jsx","containers/Main.jsx","containers/Header.jsx","App.js","index.js"],"names":["AppContext","createContext","Provider","AppProvider","props","API_KEY","process","useState","categorys","setCategorys","singleMovie","setSingleMovie","query","setQuery","movies","setMovies","displaySearch","setDisplaySearch","openMenuHamb","setOpenMenuHamb","display","setDisplay","sectionName","setSectionName","isExecuted","setIsExecuted","page","setPage","genreId","setGenreId","displayedSearchName","setDisplayedSearchName","totalPages","setTotalPages","popMovies","setpopMovies","topMovies","settopMovies","clientX","setClientX","clientY","setClientY","getCarusselMovies","attribute","a","url","fetch","response","json","data","url2","response2","data2","results","fetchCategorys","e","genres","useEffect","fetchSingleMovieWithMovieId","id","fetchMoviesSearch","length","results2","total_pages","fetchByAtt","att","fetchByCategory","name","fetchBy","fetchSimilarMovies","title","loadMoreHandlerFromSearch","newMoviesResult","value","handleBackHome","document","querySelector","classList","remove","children","Library","useContext","style","background","color","fontWeight","paddingLeft","fontSize","handleClick","window","scrollTo","currentTarget","dataset","className","map","category","data-id","data-name","onClick","Logo","SortByNav","SideBar","Sidebar","useRef","ref","current","contains","target","transform","opacity","transition","Search","onSubmit","preventDefault","fill","size","onChange","type","placeholder","MovieCard","movie","backgroundImage","poster_path","handleCardClickShow","add","getAttribute","screenY","screenX","data-key","position","height","substring","trim","release_date","vote_average","Carusel","additionalTransfrom","arrows","containerClass","draggable","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","min","items","between","tablet","mobile","showDots","slidesToSlide","swipeable","lenth","SectionTitle","showSeeAll","setShowSeeAll","seeAllHandler","parentNode","key","onMouseOver","onMouseOut","stroke","Content","width","YoutubePlayer","SetVideoIsOpen","videos","controls","cursor","CardDetail","videoIsOpen","arrGenre","backdrop_path","handleCategoryClick","src","alt","original_title","overview","genre","SearchResult","isFetching","setIsFetching","addEventListener","handleScroll","removeEventListener","fetchMoreListItems","innerHeight","scrollY","body","offsetHeight","setTimeout","index","split","join","Main","toggle","Header","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ace5d0d1.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const AppContext = createContext();\n\nconst { Provider } = AppContext;\n\nexport const AppProvider = (props) => {\n  const API_KEY = process.env.REACT_APP_API_KEY;\n\n  const [categorys, setCategorys] = useState([]); // fetch each category and store them into array to display them in sidebar\n  const [singleMovie, setSingleMovie] = useState([]); // store the result of the fetch of a single movie when user click on movie card\n  const [query, setQuery] = useState(\"\"); // query from user input\n  const [movies, setMovies] = useState([]); // Array of movie that we fetch\n  const [displaySearch, setDisplaySearch] = useState(false); // Set the display true to use right fetch url\n  const [openMenuHamb, setOpenMenuHamb] = useState(false); // Toggle the opening and closing of hamburger menu\n  const [display, setDisplay] = useState(false); // handle the display of the card detail movie show\n  const [sectionName, setSectionName] = useState(\"\"); // Section name string\n  const [isExecuted, setIsExecuted] = useState(true); // Setting the Spinner loader\n  const [page, setPage] = useState(1); // set page to fetch\n  const [genreId, setGenreId] = useState(null); // store genre id of movie category to fetch and store the movies\n  const [displayedSearchName, setDisplayedSearchName] = useState(\"\"); // Set the name of the fetch to load more content\n  const [totalPages, setTotalPages] = useState(10);\n  const [popMovies, setpopMovies] = useState([]); // Set the popular movies only first render\n  const [topMovies, settopMovies] = useState([]); // Set top rated movies only first render\n  const [clientX, setClientX] = useState(null);\n  const [clientY, setClientY] = useState(null);\n\n  const getCarusselMovies = async (attribute) => {\n    const url = `https://api.themoviedb.org/3/movie/${attribute}?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await fetch(url);\n    const data = await response.json();\n\n    const url2 = `https://api.themoviedb.org/3/movie/${attribute}?api_key=${API_KEY}&language=en-US&page=2`;\n    const response2 = await fetch(url2);\n    const data2 = await response2.json();\n\n    if (attribute === \"popular\")\n      setpopMovies([...data.results, ...data2.results]);\n    if (attribute === \"top_rated\")\n      settopMovies([...data.results, ...data2.results]);\n  };\n\n  // Get the name of categorys and display them on sidebar\n  const fetchCategorys = async (e) => {\n    const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    const genres = await data.genres;\n    setCategorys(genres);\n  };\n\n  // Fetch at first render the categorys\n  useEffect(() => {\n    fetchCategorys();\n  }, []);\n\n  // Fetch single movie by id to display movie card detail\n  const fetchSingleMovieWithMovieId = async (id) => {\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&append_to_response=videos`;\n    const response = await fetch(url);\n    const data = await response.json();\n    setSingleMovie(data);\n  };\n\n  // Handle the search for movie and display it\n  const fetchMoviesSearch = async () => {\n    setIsExecuted(true);\n    if (query.length !== 0) {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n      );\n      const data = await response.json();\n      const results = data.results;\n\n      const response2 = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=2&include_adult=false`\n      );\n      const data2 = await response2.json();\n      const results2 = data2.results;\n      setMovies([...results, ...results2]);\n      setSectionName(query);\n      setDisplayedSearchName(\"search\");\n      setIsExecuted(false);\n\n      setDisplaySearch(true);\n      setTotalPages(data.total_pages);\n      setPage(3);\n    }\n  };\n  const fetchByAtt = async (att) => {\n    setIsExecuted(true);\n    if (att === \"popular\") setMovies([...popMovies]);\n    if (att === \"top_rated\") setMovies([...topMovies]);\n    setDisplayedSearchName(\"seeAll\");\n    setDisplaySearch(true);\n    setSectionName(att);\n    setPage(3);\n    setIsExecuted(false);\n  };\n\n  // Fetch by category nav link\n  const fetchByCategory = async (name, id) => {\n    // No fetch if clicking the same category\n    if (sectionName === name) {\n      return;\n    }\n    setDisplay(false);\n    setDisplaySearch(true);\n    setMovies([]);\n    setGenreId(id);\n    setIsExecuted(true);\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&page=1&with_genres=${id}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    const results = data.results;\n\n    const url2 = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&page=2&with_genres=${id}`;\n    const response2 = await fetch(url2);\n    const data2 = await response2.json();\n    const results2 = data2.results;\n\n    setMovies([...results, ...results2]);\n    setDisplayedSearchName(\"category\");\n    setSectionName(name);\n    setTotalPages(data.total_pages);\n    setIsExecuted(false);\n    setPage(3);\n  };\n\n  // Fetct to sort by\n  const fetchBy = async (att) => {\n    setMovies([]);\n    setIsExecuted(true);\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=${att}&include_adult=false&include_video=false&page=1`;\n    const response = await fetch(url);\n    const data = await response.json();\n    const results = data.results;\n    const url2 = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=${att}&include_adult=false&include_video=false&page=2`;\n    const response2 = await fetch(url2);\n    const data2 = await response2.json();\n    const results2 = data2.results;\n    setMovies([...results, ...results2]);\n    setDisplaySearch(true);\n    setSectionName(att);\n    setDisplayedSearchName(\"sort\");\n    setOpenMenuHamb(false);\n    setTotalPages(data.total_pages);\n    setIsExecuted(false);\n    setPage(3);\n  };\n\n  // Fetch siimilar movie by clicking on btn in card detail\n  const fetchSimilarMovies = async () => {\n    setDisplay(false);\n    setDisplayedSearchName(\"similar\");\n    setIsExecuted(true);\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${singleMovie.id}/similar?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    const data = await response.json();\n    const results = data.results;\n\n    const response2 = await fetch(\n      `https://api.themoviedb.org/3/movie/${singleMovie.id}/similar?api_key=${API_KEY}&language=en-US&page=2`\n    );\n    const data2 = await response2.json();\n    const results2 = data2.results;\n    setDisplaySearch(true);\n    setMovies([...results, ...results2]);\n    setSectionName(`\"${singleMovie.title}\" Similar Movies`);\n    setPage();\n    setIsExecuted(false);\n    setPage(3);\n    setTotalPages(data.total_pages);\n  };\n\n  // Load more movies handler\n  const loadMoreHandlerFromSearch = async () => {\n    if (page >= totalPages) {\n      return;\n    }\n    const url =\n      displayedSearchName === \"category\"\n        ? `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&page=${page}&with_genres=${genreId}`\n        : displayedSearchName === \"search\"\n        ? `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${\n            page + 1\n          }&include_adult=false`\n        : displayedSearchName === \"sort\"\n        ? `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=${sectionName}&include_adult=false&include_video=false&page=${\n            page + 1\n          }`\n        : displayedSearchName === \"seeAll\"\n        ? `https://api.themoviedb.org/3/movie/${sectionName}?api_key=${API_KEY}&language=en-US&page=${\n            page + 1\n          }`\n        : displayedSearchName === \"similar\"\n        ? `https://api.themoviedb.org/3/movie/${\n            singleMovie.id\n          }/similar?api_key=${API_KEY}&language=en-US&page=${page + 1}`\n        : null;\n    const response = await fetch(url);\n    const data = await response.json();\n    const results = data.results;\n    const newMoviesResult = [...movies, ...results];\n\n    setMovies(newMoviesResult);\n    setPage(page + 1);\n    setTotalPages(data.total_pages);\n  };\n\n  // Handle the back home when clicking on logo\n  const handleBackHome = () => {\n    setIsExecuted(true);\n    setDisplaySearch(false);\n    setDisplay(false);\n    setOpenMenuHamb(false);\n    setSectionName(\"\");\n    setQuery(\"\");\n    document.querySelector(\"body\").classList.remove(\"overflow\");\n  };\n\n  return (\n    <Provider\n      value={{\n        categorys,\n        singleMovie,\n        displaySearch,\n        movies,\n        openMenuHamb,\n        display,\n        sectionName,\n        isExecuted,\n        query,\n        setClientX,\n        setClientY,\n        clientX,\n        clientY,\n        topMovies,\n        popMovies,\n        setSingleMovie,\n        setMovies,\n        getCarusselMovies,\n        fetchSingleMovieWithMovieId,\n        fetchMoviesSearch,\n        setOpenMenuHamb,\n        setPage,\n        setDisplaySearch,\n        setDisplay,\n        handleBackHome,\n        fetchByAtt,\n        setQuery,\n        setIsExecuted,\n        fetchBy,\n        fetchByCategory,\n        loadMoreHandlerFromSearch,\n        fetchSimilarMovies,\n      }}>\n      {props.children}\n    </Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../Context/AppContext\";\n\nconst Library = () => {\n  const props = useContext(AppContext);\n\n  const style = {\n    background: \"var(--color-primary)\",\n    color: \"#181b21\",\n    fontWeight: \"900\",\n    paddingLeft: \"5px\",\n    fontSize: \"16px\",\n  };\n  const handleClick = (e) => {\n    props.setOpenMenuHamb(false);\n    window.scrollTo(0, 0);\n    document.querySelector(\"body\").classList.remove(\"overflow\");\n    props.fetchByCategory(\n      e.currentTarget.dataset.name,\n      e.currentTarget.dataset.id\n    );\n  };\n\n  return (\n    <div className=\"library\">\n      <h2 className=\"section-title\">GENRES:</h2>\n      <ul className=\"library-nav\">\n        {props.categorys.length !== 0\n          ? props.categorys.map((category) => (\n              <li\n                key={category.id}\n                data-id={category.id}\n                data-name={category.name}\n                style={props.sectionName === category.name ? style : null}\n                onClick={handleClick}>\n                {category.name}\n              </li>\n            ))\n          : null}\n      </ul>\n    </div>\n  );\n};\n\nexport default Library;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../Context/AppContext\";\n\nconst Logo = () => {\n  const props = useContext(AppContext);\n\n  return (\n    <div className=\"logo\" onClick={props.handleBackHome}>\n      <h1>🕵️‍♂️🍿</h1>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../Context/AppContext\";\n\nconst SortByNav = () => {\n  const props = useContext(AppContext);\n\n  const style = {\n    background: \"var(--color-primary)\",\n    color: \"#181b21\",\n    fontWeight: \"900\",\n    paddingLeft: \"5px\",\n    fontSize: \"12px\",\n  };\n  const handleClick = (e) => {\n    window.scrollTo(0, 0);\n    props.setDisplay(false);\n    document.querySelector(\"body\").classList.remove(\"overflow\");\n    props.fetchBy(e.currentTarget.dataset.name);\n    props.setOpenMenuHamb(false);\n  };\n\n  return (\n    <div className=\"sort-by\">\n      <h2 className=\"section-title\">SORT BY</h2>\n      <ul className=\"sort-by-nav\">\n        <li\n          style={props.sectionName === \"popularity.desc\" ? style : null}\n          data-name=\"popularity.desc\"\n          onClick={handleClick}>\n          Popularity desc\n        </li>\n        <li\n          style={props.sectionName === \"vote_average.desc\" ? style : null}\n          data-name=\"vote_average.desc\"\n          onClick={handleClick}>\n          Vote average\n        </li>\n        <li\n          style={props.sectionName === \"vote_count.desc\" ? style : null}\n          data-name=\"vote_count.desc\"\n          onClick={handleClick}>\n          Vote Count\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default SortByNav;\n","import React, { useContext } from \"react\";\nimport { useRef } from \"react\";\nimport Library from \"../components/sidebar/Library\";\nimport Logo from \"../components/sidebar/Logo\";\nimport SortByNav from \"../components/sidebar/SortByNav\";\nimport { AppContext } from \"../Context/AppContext\";\n\nconst SideBar = () => {\n  const props = useContext(AppContext);\n  const Sidebar = useRef(null);\n\n  const styleOpen = {\n    transform: \"translateX(100vw)\",\n    opacity: \"1\",\n    transition: \"transform 1s ease\",\n  };\n  const handleClick = (e) => {\n    if (Sidebar.current && Sidebar.current.contains(e.target)) {\n      props.setOpenMenuHamb(false);\n    }\n  };\n\n  return (\n    <div\n      ref={Sidebar}\n      onClick={handleClick}\n      className=\"side-bar\"\n      style={props.openMenuHamb ? styleOpen : null}>\n      <Logo className=\"logo\" />\n      <Library />\n      <SortByNav />\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React, { useContext } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { AppContext } from \"../../Context/AppContext\";\n\nconst Search = () => {\n  const props = useContext(AppContext);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (props.query === \"\") return;\n    props.setDisplay(false);\n    document.querySelector(\"body\").classList.remove(\"overflow\");\n    props.fetchMoviesSearch();\n  };\n\n  return (\n    <form className=\"search\" onSubmit={handleSubmit}>\n      <div className=\"wrapper-search\">\n        <div className=\"icon\">\n          <FaSearch fill=\"var(--color-primary)\" size={20} />\n        </div>\n        <input\n          value={props.query}\n          onChange={(e) => {\n            props.setQuery(e.target.value);\n          }}\n          className=\"search-input\"\n          type=\"text\"\n          placeholder=\"Search for your movie! 🎥🎬🍿\"\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { FaStar } from \"react-icons/fa\";\nimport { AppContext } from \"../../Context/AppContext\";\n\nconst MovieCard = (movie) => {\n  const props = useContext(AppContext);\n  var backgroundImage = \" \";\n\n  if (movie) {\n    if (movie.movie.poster_path === null) {\n      backgroundImage = `url(https://www.featherliteladders.com/media/1286/image-not-available.jpg)`;\n    } else {\n      backgroundImage = `url(https://image.tmdb.org/t/p/w185/${movie.movie.poster_path})`;\n    }\n  }\n  // Handle the display of card movie detail when click on movie card\n  const handleCardClickShow = (e) => {\n    document.querySelector(\"body\").classList.add(\"overflow\");\n    props.setSingleMovie([]);\n    const att = e.target.getAttribute(\"data-key\");\n    props.fetchSingleMovieWithMovieId(att);\n    props.setDisplay(true);\n    props.setClientY(e.screenY);\n    props.setClientX(e.screenX);\n  };\n\n  return (\n    <div\n      key={movie.movie.id}\n      data-key={movie.movie.id}\n      onClick={(e) => {\n        handleCardClickShow(e);\n      }}\n      className=\"card-container\"\n      style={{\n        backgroundImage: backgroundImage,\n        position: \"relative\",\n        height: \"100%\",\n      }}>\n      <div\n        data-key={movie.movie.id}\n        onClick={(e) => {\n          handleCardClickShow(e);\n        }}\n        className=\"detail-card-hover\">\n        <div\n          data-key={movie.movie.id}\n          onClick={(e) => {\n            handleCardClickShow(e);\n          }}>\n          <p\n            data-key={movie.movie.id}\n            onClick={(e) => {\n              handleCardClickShow(e);\n            }}\n            className=\"title-card-hover\">\n            {movie.movie.title.length < 10\n              ? movie.movie.title\n              : movie.movie.title.substring(0, 20).trim() + \"...\"}\n          </p>\n          <p\n            className=\"release\"\n            data-key={movie.movie.id}\n            onClick={(e) => {\n              handleCardClickShow(e);\n            }}>\n            {movie.movie.release_date}\n          </p>\n        </div>\n\n        <div\n          data-key={movie.movie.id}\n          onClick={(e) => {\n            handleCardClickShow(e);\n          }}\n          className=\"vote-card-detail\">\n          <span>\n          <FaStar size=\"16px\" fill=\"var(--color-primary)\" />\n          </span>\n          {movie.movie.vote_average}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport MovieCard from \"./MovieCard\";\n\nconst Carusel = (movies) => {\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1601 },\n      items: 4,\n    },\n    between: {\n      breakpoint: { max: 1600, min: 1024 },\n      items: 4,\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 600 },\n      items: 3,\n    },\n    mobile: {\n      breakpoint: { max: 599, min: 0 },\n      items: 2,\n    },\n  };\n  return (\n    <Carousel\n      additionalTransfrom={0}\n      arrows\n      containerClass=\"container-with-dots\"\n      draggable\n      keyBoardControl\n      minimumTouchDrag={80}\n      renderButtonGroupOutside={false}\n      renderDotsOutside={false}\n      responsive={responsive}\n      showDots={false}\n      slidesToSlide={4}\n      swipeable>\n      {movies.movies.lenth !== 0 &&\n        movies.movies.map((movie) => {\n          return <MovieCard key={movie.id} movie={movie} />;\n        })}\n    </Carousel>\n  );\n};\n\nexport default Carusel;\n","import React, { useContext, useState } from \"react\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport { FiArrowRight } from \"react-icons/fi\";\n\nconst SectionTitle = ({ title }) => {\n  const [showSeeAll, setShowSeeAll] = useState(false);\n\n  const props = useContext(AppContext);\n\n  const seeAllHandler = (e) => {\n    let att = e.currentTarget.parentNode.parentNode.dataset.key;\n    props.fetchByAtt(att);\n  };\n\n  return (\n    <div className=\"title-wrapper\">\n      <h3 className=\"section-title main-title\" onClick={seeAllHandler}>{title}</h3>\n      <div\n        className=\"see-all\"\n        onMouseOver={() => setShowSeeAll(true)}\n        onMouseOut={() => setShowSeeAll(false)}\n        onClick={seeAllHandler}>\n        {showSeeAll ? (\n          <p className=\"see-all\">View all</p>\n        ) : (\n          <FiArrowRight stroke=\"var(--color-primary)\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SectionTitle;\n","import React, { useEffect, useContext } from \"react\";\nimport Carusel from \"../main/Carusel\";\nimport SectionTitle from \"../main/SectionTitle\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport Loader from \"react-loader-spinner\";\n\nconst Content = () => {\n  const props = useContext(AppContext);\n  useEffect(() => {\n    props.getCarusselMovies(\"popular\");\n    props.getCarusselMovies(\"top_rated\");\n  }, [props]);\n  return (\n    <div className=\"content\">\n      <div className=\"carusel-wrapper\" data-key=\"popular\">\n        <SectionTitle title=\"Popular Movies\" />\n        {props.popMovies.length !== 0 ? (\n          <Carusel movies={props.popMovies} />\n        ) : (\n          <div className=\"loader\">\n            <Loader\n              type=\"TailSpin\"\n              color=\"var(--color-primary)\"\n              height={50}\n              width={50}\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"carusel-wrapper\" data-key=\"top_rated\">\n        <SectionTitle title=\"Highest rated Movies\" />\n        {props.topMovies.length !== 0 ? (\n          <Carusel movies={props.topMovies} />\n        ) : (\n          <div className=\"loader\">\n            <Loader\n              type=\"TailSpin\"\n              color=\"var(--color-primary)\"\n              height={50}\n              width={50}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React, { useContext } from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { FaSadTear, FaTimesCircle } from \"react-icons/fa\";\nimport { AppContext } from \"../../Context/AppContext\";\n\nconst YoutubePlayer = ({ SetVideoIsOpen }) => {\n  const props = useContext(AppContext);\n\n  if (props.singleMovie.videos.results.length !== 0) {\n    return (\n      <div className=\"video-player-container\">\n        <ReactPlayer\n          url={\n            \"https://www.youtube.com/watch?v=\" +\n            props.singleMovie.videos.results[0].key\n          }\n          controls={true}\n          width=\"100%\"\n          height=\"100%\"\n        />\n        <div className=\"icon-wrapper\">\n          <div\n            className=\"icon-close-video\"\n            onClick={() => SetVideoIsOpen(false)}>\n            <FaTimesCircle size=\"30px\" style={{ cursor: \"pointer\" }} />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"no-trailer-container\">\n        <div className=\"sad-icon-container\">\n          <FaSadTear size=\"50px\" />\n        </div>\n        <div className=\"icon-close-video\" onClick={() => SetVideoIsOpen(false)}>\n          <FaTimesCircle size=\"30px\" style={{ cursor: \"pointer\" }} />\n        </div>\n        <div className=\"no-trailer-text-container\">\n          <p>Sorry, no trailer was found...</p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default YoutubePlayer;\n","import React, { useState, useContext } from \"react\";\nimport { FaStar } from \"react-icons/fa\";\nimport YoutubePlayer from \"../main/YoutubeVideoPlayer\";\nimport { AppContext } from \"../../Context/AppContext\";\n\nconst CardDetail = () => {\n  const props = useContext(AppContext);\n  const [videoIsOpen, SetVideoIsOpen] = useState(false);\n  const arrGenre = props.singleMovie.genres; // GET THE GENRES FROM SINGLEMOVIE TO DISPLAY IN CARD DETAIL\n  const background = `url(https://image.tmdb.org/t/p/w780/${props.singleMovie.backdrop_path})`; // SET THE BACKGROUND OF THE CARD DETAIL\n\n  const style = {\n    backgroundImage: background,\n  };\n\n  const handleClickFetchSimilar = () => {\n    document.querySelector(\"body\").classList.remove(\"overflow\");\n    props.fetchSimilarMovies();\n    window.scrollTo(0, 0);\n  };\n\n  const handleCategoryClick = (e) => {\n    document.querySelector(\"body\").classList.remove(\"overflow\");\n    const name = e.target.dataset.name;\n    const id = e.target.dataset.id;\n    props.fetchByCategory(name, id);\n  };\n\n  const handleClickOutside = (e) => {\n    if (e.target.classList.value === \"gradient\") {\n      document.querySelector(\"body\").classList.remove(\"overflow\");\n      props.setDisplay(false);\n    }\n  };\n\n  return (\n    <div className=\"card-detail\" style={style}>\n      <div className=\"gradient\" onClick={handleClickOutside}>\n        <div className=\"movie-detail-container\">\n          <div className=\"wrapper-shadow\">\n            <img\n              src={`https://image.tmdb.org/t/p/w185/${props.singleMovie.poster_path}`}\n              alt=\"\"\n              className=\"poster\"\n            />\n            <div className=\"card-detail-text-wrapper\">\n              <div className=\"title-and-note\">\n                <h3>{props.singleMovie.original_title}</h3>\n                <div className=\"note-container\">\n                  <FaStar size=\"14px\" fill=\"var(--color-primary)\" />\n                  <span className=\"note\">{props.singleMovie.vote_average}</span>\n                </div>\n              </div>\n              <span className=\"release\">{props.singleMovie.release_date}</span>\n              <p className=\"movie-description\">{props.singleMovie.overview}</p>\n              <div className=\"genre-container\">\n                {arrGenre &&\n                  arrGenre.map((genre) => (\n                    <p\n                      key={genre.id}\n                      data-id={genre.id}\n                      data-name={genre.name}\n                      onClick={handleCategoryClick}\n                      className=\"category-card-detail\">\n                      {genre.name} /\n                    </p>\n                  ))}\n              </div>\n              <div\n                className=\"fetch-similar-btn\"\n                onClick={handleClickFetchSimilar}>\n                You may also like\n              </div>\n              <div\n                onClick={() => {\n                  SetVideoIsOpen(true);\n                }}\n                className=\"see-trailer-btn\">\n                Watch trailer\n              </div>\n            </div>\n          </div>\n          {videoIsOpen && <YoutubePlayer SetVideoIsOpen={SetVideoIsOpen} />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardDetail;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport MovieCard from \"../main/MovieCard\";\nimport { AppContext } from \"../../Context/AppContext\";\nimport Loader from \"react-loader-spinner\";\n\nconst SearchResult = ({ handleCardClickShow }) => {\n  const props = useContext(AppContext);\n  const [isFetching, setIsFetching] = useState(false);\n\n  // ADD EVENT LISTENER WHEN COMPONANT MOUNT\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // CALL FUNCTION FETCH MORE WHEN ISFETCHIN IS TRUE (BOTTOM OF THE PAGE)\n\n  useEffect(() => {\n    if (!isFetching) return;\n    fetchMoreListItems();\n  }, [isFetching]);\n\n  // SET IS FETCHING TO TRUE WHEN AT BOTTOM OF PAGE\n  const handleScroll = () => {\n    if (\n      window.innerHeight + window.scrollY + 100 >=\n      document.body.offsetHeight\n    ) {\n      setIsFetching(true);\n    }\n  };\n\n  // CALL FETCH FUNCTION TO DISPLAY MORE ITEMS\n  const fetchMoreListItems = () => {\n    setTimeout(() => {\n      props.loadMoreHandlerFromSearch();\n      setIsFetching(false);\n    }, 1000);\n  };\n\n  // DISPAY SPINNER LOADER WHEN STARTING TO FETCH\n  if (props.isExecuted) {\n    return (\n      <div className=\"noResult\">\n        <Loader\n          type=\"TailSpin\"\n          color=\"var(--color-primary)\"\n          height={50}\n          width={50}\n        />\n      </div>\n    );\n  }\n  // IF MOVIE WAS RETURN FROM API? DISPLAY THEM\n  if (props.movies.length !== 0) {\n    return (\n      <>\n        {props.movies.map((movie, index) => (\n          <div key={movie.id + index} className=\"search-movie-card\">\n            <MovieCard\n              handleCardClickShow={handleCardClickShow}\n              movie={movie}\n            />\n          </div>\n        ))}\n      </>\n    );\n  }\n  // DISPLAY NO RESULT IF NOTHING WAS RETURN FROM API\n  if (props.movies.length === 0) {\n    return (\n      <div className=\"noResult\">\n        Nothing was found for \"{props.sectionName.split('\"').join(\" \")}\"\n      </div>\n    );\n  }\n};\n\nexport default SearchResult;\n","import React, { useContext } from \"react\";\nimport Search from \"../components/main/Search\";\nimport Content from \"../components/main/Content\";\nimport CardDetail from \"../components/main/CardDetail\";\nimport SearchResult from \"../components/main/SearchResult\";\nimport Logo from \"../components/sidebar/Logo\";\nimport { AppContext } from \"../Context/AppContext\";\nimport { FaBars } from \"react-icons/fa\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nconst Main = () => {\n  const props = useContext(AppContext);\n\n  const handleClickHamb = () => {\n    document.querySelector(\"body\").classList.toggle(\"overflow\");\n    props.setOpenMenuHamb(!props.openMenuHamb);\n  };\n\n  const handleClickLogo = () => {\n    document.querySelector(\"body\").classList.remove(\"overflow\");\n\n    props.setPage(1);\n    props.handleBackHome();\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"hamburger-icon\" onClick={handleClickHamb}>\n        {props.openMenuHamb ? (\n          <AiOutlineClose size={30} />\n        ) : (\n          <FaBars size={30} />\n        )}\n      </div>\n      <div className=\"logo\" onClick={handleClickLogo}>\n        <Logo />\n      </div>\n      {props.display && <CardDetail />}\n      <Search />\n      {props.displaySearch ? (\n        <div className=\"search-result-container\">\n          <SearchResult />\n        </div>\n      ) : (\n        <Content />\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport SideBar from \"./SideBar\";\nimport Main from \"./Main\";\n\nconst Header = () => {\n  return (\n    <header className=\"container\">\n      <SideBar />\n      <Main />\n    </header>\n  );\n};\n\nexport default Header;\n","import \"./App.scss\";\nimport Header from \"./containers/Header\";\nimport React from \"react\";\nimport { AppProvider } from \"./Context/AppContext\";\n\nfunction App() {\n  return (\n    <AppProvider>\n      <Header />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}